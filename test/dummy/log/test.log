  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.0ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.2ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Subtract_point_from_a_point
----------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------------
CircleIntersection::Test: test_Coincident_circles
-------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------------------
CircleIntersection::Test: test_Distance_to_chord
------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------------------
CircleIntersection::Test: test_Testing_if_two_circles_intersect
---------------------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Add_point_to_a_point
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.2ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------------
CircleIntersection::Test: test_Larger_point
-------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------
CircleIntersection::Test: test_Separate_circles
-----------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
--------------------------------------------------
CircleIntersection::Test: test_Intersection_center
--------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
----------------------------------------------------------
CircleIntersection::Test: test_Distance_between_two_points
----------------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
---------------------------------------------------
CircleIntersection::Test: test_Circle_within_circle
---------------------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-----------------------------------------------------
CircleIntersection::Test: test_Points_of_intersection
-----------------------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
-------------------------------------
CircleIntersection::Test: test_Height
-------------------------------------
  [1m[35m (0.1ms)[0m  [1m[31mrollback transaction[0m
  [1m[35m (0.1ms)[0m  [1m[36mbegin transaction[0m
------------------------------------
CircleIntersection::Test: test_truth
------------------------------------
  [1m[35m (0.0ms)[0m  [1m[31mrollback transaction[0m
